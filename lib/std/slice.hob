public import "def.hob" as def;

public type Slice<T> = struct {
    public raw: *T,
    public length: def.Size,
};

public fun new<T>(raw: *T, length: def.Size) -> Slice.<T> {
    return <(Slice.<T>)> {
        raw: raw,
        length: length,
    };
}

public fun Slice.at(self, idx: def.Size) -> T {
    return self.raw[idx];
}

public fun Slice.atRef(&self, idx: def.Size) -> *T {
    return &self.*.raw[idx];
}

