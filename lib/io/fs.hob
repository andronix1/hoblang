import "fd.hob" as fd;

public type File = fd.Fd;

type OpenFlags = i32;
fun OpenFlags.or(self, value: i32) -> OpenFlags { return (self as i32 | value) as OpenFlags; }
public fun openFlags() -> OpenFlags { return 0; }
public fun OpenFlags.writeOnly(self) -> OpenFlags { return self.or(1); }
public fun OpenFlags.readWrite(self) -> OpenFlags { return self.or(2); }
public fun OpenFlags.create(self) -> OpenFlags { return self.or(100); }
public fun OpenFlags.exclusive(self) -> OpenFlags { return self.or(200); }
public fun OpenFlags.trunc(self) -> OpenFlags { return self.or(1000); }
public fun OpenFlags.append(self) -> OpenFlags { return self.or(2000); }

#`
public fun open(path: string, flags: OpenFlags) -> Result.<File> {
    c.open();
}
`#



