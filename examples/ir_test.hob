#`
    1. create decls + types
    2. init decls + types
    2. emit func bodies
`#

#`
types = [
    SIMPLE: i32,
    ...,
    RECORD, <A>
]

decls = [
    0, // putChar
    1, // getChar
    2, // main
]
`#

extern(putchar) fun putChar(c: u8); # declId + externId
extern(getchar) fun getChar() -> u8; # declId + externId

type A = i32; # typeId(record)
              # INIT

global fun main() -> i32 { # declId + funcId + body
    final c: u8 = getChar();
    putChar(c);
    putChar('\n');
    if c >= '0' {
        if c <= '8' {
            putChar(c + 1);
            putChar('\n');
            return 0;
        }
    }
    putChar('o');
    putChar('o');
    putChar('p');
    putChar('s');
    putChar('i');
    putChar('e');
    putChar('.');
    putChar('.');
    putChar('.');
    putChar('\n');
    return 1;
}

